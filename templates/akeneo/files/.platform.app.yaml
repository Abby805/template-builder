# This file describes an application.

# The name of this app. Must be unique within a project.
name: app

# The language and version to use to run the application.
type: php:7.3

# Enable non-default extensions required by Akeneo
runtime:
    extensions:
        - apcu
        - imagick
        - memcached
        - intl

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the environment variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: "db:mysql"
    essearch: "search:elasticsearch"

# The configuration of app when it is exposed to the web.
web:
    locations:
        "/":
            root: 'public'
            passthru: '/index.php'

# The size of the persistent disk of the application (in MB).
disk: 3072

variables:
    env:
        APP_ENV: 'prod'
    php:
        apc.enable_cli: 1

# The mounts that will be performed when the package is deployed.
mounts:
    "var":
        source: local
        source_path: "var"
    # Used to control the Platform.sh install process. Do not delete the file inside it.
    "installer":
        source: local
        source_path: "installer"
    "web":
        source: local
        source_path: "web"
    # This mount is not listed in the Akeneo documentation, but is required for the
    # Doctrine portion of the installer.
    "upgrades":
        source: local
        source_path: "upgrades"

dependencies:
    nodejs:
        yarn: "*"

hooks:
    # We run the build hook before your application has been packaged.
    build: |
        # install nvm to use newer version of node
        unset NPM_CONFIG_PREFIX
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.2/install.sh | dash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        # install node 14 (currently latest LTS)
        nvm install 14

        NO_DOCKER=true make node_modules
        NO_DOCKER=true make assets
        NO_DOCKER=true make javascript-prod

        # run yarn to install frontend
        #yarn install
        #yarn run webpack

        # remove dev file
        #rm web/app_dev.php

    # We run the deploy hook after your application has been deployed and started.
    deploy: |
        rm -rf var/cache/* && php bin/console cache:warmup

        # clear caches
        #bin/console cache:clear --no-warmup --env=prod

        # create tmp folders
        #mkdir -p /tmp/pim/file_storage
        #mkdir -p /tmp/pim/upload_tmp_dir

        # run installer if no lockfile exists
        if [ ! -f installer/.platform.installed ]; then
            bin/console pim:installer:db --env=prod --catalog vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/InstallerBundle/Resources/fixtures/minimal
            touch installer/.platform.installed
        fi

crons:
    refresh:
        spec: '30 1 * * *'
        cmd: 'php bin/console pim:versioning:refresh'
    purge_versioning:
        spec: '30 2 * * *'
        cmd: 'php bin/console pim:versioning:purge â€“more-than-days 90'
    update_data:
        spec: '1 * * * *'
        cmd: 'php bin/console akeneo:connectivity-audit:update-data'
    purge_jobs:
        spec: '20 0 1 * *'
        cmd: 'php bin/console akeneo:batch:purge-job-execution'
    aggregate:
        spec: '30 4 * * *'
        cmd: 'php bin/console pim:volume:aggregate'

workers:
    queue:
        disk: 512
        commands:
            start: |
                php /app/bin/console akeneo:batch:job-queue-consumer-daemon
