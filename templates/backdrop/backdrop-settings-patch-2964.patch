From 9f87d079c4c397b5853cc1bb18c389abea8a10cb Mon Sep 17 00:00:00 2001
From: Herb vd Dool <herb@3speedhub.com>
Date: Thu, 31 Oct 2019 12:13:48 -0400
Subject: [PATCH 1/6] allow someone to set error_level in settings.php

---
 core/includes/errors.inc           | 1 +
 core/modules/system/system.install | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/core/includes/errors.inc b/core/includes/errors.inc
index a71fdf7eb7..6a51744862 100644
--- a/core/includes/errors.inc
+++ b/core/includes/errors.inc
@@ -150,6 +150,7 @@ function _backdrop_render_exception_safe($exception) {
 function error_displayable($error = NULL) {
   try {
     $error_level = function_exists('config_get') ? config_get('system.core', 'error_level') : ERROR_REPORTING_DISPLAY_ALL;
+    $error_level = function_exists('settings_get') ? settings_get('system.core.error_level') : $error_level;
   }
   catch (ConfigException $e) {}
   if (empty($error_level)) {
diff --git a/core/modules/system/system.install b/core/modules/system/system.install
index 1595efc08b..587342b687 100644
--- a/core/modules/system/system.install
+++ b/core/modules/system/system.install
@@ -565,7 +565,7 @@ function system_requirements($phase) {
 
   if ($phase == 'runtime') {
     // Inform user about status of display error messages.
-    $error_level = config_get('system.core', 'error_level');
+    $error_level = settings_get('system.core.error_level', config_get('system.core', 'error_level'));
     $description = $t('Backdrop CMS provides the ability to display error messages, which can be useful while a site is in development.');
     $logging_url = url('admin/config/development/logging');
     if ($error_level != ERROR_REPORTING_HIDE) {

From fa0b428e9c0b073a3f940b5fa0b9fae52c236cb8 Mon Sep 17 00:00:00 2001
From: Herb vd Dool <herb@3speedhub.com>
Date: Thu, 31 Oct 2019 14:04:29 -0400
Subject: [PATCH 2/6] fix

---
 core/includes/errors.inc           | 2 +-
 core/modules/system/system.install | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/core/includes/errors.inc b/core/includes/errors.inc
index 6a51744862..0568f060a1 100644
--- a/core/includes/errors.inc
+++ b/core/includes/errors.inc
@@ -150,7 +150,7 @@ function _backdrop_render_exception_safe($exception) {
 function error_displayable($error = NULL) {
   try {
     $error_level = function_exists('config_get') ? config_get('system.core', 'error_level') : ERROR_REPORTING_DISPLAY_ALL;
-    $error_level = function_exists('settings_get') ? settings_get('system.core.error_level') : $error_level;
+    $error_level = settings_get('error_level', $error_level);
   }
   catch (ConfigException $e) {}
   if (empty($error_level)) {
diff --git a/core/modules/system/system.install b/core/modules/system/system.install
index 587342b687..d52e11cb47 100644
--- a/core/modules/system/system.install
+++ b/core/modules/system/system.install
@@ -565,7 +565,7 @@ function system_requirements($phase) {
 
   if ($phase == 'runtime') {
     // Inform user about status of display error messages.
-    $error_level = settings_get('system.core.error_level', config_get('system.core', 'error_level'));
+    $error_level = settings_get('error_level', config_get('system.core', 'error_level'));
     $description = $t('Backdrop CMS provides the ability to display error messages, which can be useful while a site is in development.');
     $logging_url = url('admin/config/development/logging');
     if ($error_level != ERROR_REPORTING_HIDE) {

From 5c276b37caf10cf6efd112755738c1a230b99249 Mon Sep 17 00:00:00 2001
From: Herb vd Dool <herb@3speedhub.com>
Date: Thu, 31 Oct 2019 23:35:32 -0400
Subject: [PATCH 3/6] allow override of cache, theme_debug, preprocess_css,
 preprocess_js. Add messages if overridden.

---
 core/includes/common.inc             |  4 ++--
 core/includes/theme.inc              |  2 +-
 core/modules/system/system.admin.inc | 18 ++++++++++++++++--
 core/modules/system/system.install   |  4 ++--
 core/modules/system/system.module    |  2 +-
 5 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/core/includes/common.inc b/core/includes/common.inc
index 72bc604367..ccb72973ec 100644
--- a/core/includes/common.inc
+++ b/core/includes/common.inc
@@ -3649,7 +3649,7 @@ function backdrop_group_css($css) {
  * @see system_element_info()
  */
 function backdrop_aggregate_css(&$css_groups) {
-  $preprocess_css = !defined('MAINTENANCE_MODE') && config_get('system.core', 'preprocess_css');
+  $preprocess_css = !defined('MAINTENANCE_MODE') && settings_get('preprocess_css', config_get('system.core', 'preprocess_css'));
 
   // For each group that needs aggregation, aggregate its items.
   foreach ($css_groups as $key => $group) {
@@ -4935,7 +4935,7 @@ function backdrop_group_js($javascript) {
  * @see backdrop_pre_render_scripts()
  */
 function backdrop_aggregate_js(&$js_groups) {
-  if (!defined('MAINTENANCE_MODE') && config_get('system.core', 'preprocess_js')) {
+  if (!defined('MAINTENANCE_MODE') && settings_get('preprocess_js', config_get('system.core', 'preprocess_js'))) {
     foreach ($js_groups as $key => $group) {
       if ($group['type'] == 'file' && $group['preprocess']) {
         $js_groups[$key]['data'] = backdrop_build_js_cache($group['items']);
diff --git a/core/includes/theme.inc b/core/includes/theme.inc
index 2d5e6208cd..cec7f38050 100644
--- a/core/includes/theme.inc
+++ b/core/includes/theme.inc
@@ -1193,7 +1193,7 @@ function theme($hook, $variables = array()) {
       $template_file = $info['path'] . '/' . $template_file;
     }
     try {
-      $theme_debug = config_get('system.core', 'theme_debug');
+      $theme_debug = settings_get('theme_debug', config_get('system.core', 'theme_debug'));
     }
     catch (ConfigException $e) {
       $theme_debug = FALSE;
diff --git a/core/modules/system/system.admin.inc b/core/modules/system/system.admin.inc
index 7ad00b177f..4b6bdc97de 100644
--- a/core/modules/system/system.admin.inc
+++ b/core/modules/system/system.admin.inc
@@ -1606,6 +1606,8 @@ function system_run_cron_submit($form, &$form_state) {
  * @see system_logging_settings_submit()
  */
 function system_logging_settings($form, &$form_state) {
+  global $settings;
+
   $form['#config'] = 'system.core';
   $form['error_level'] = array(
     '#type' => 'radios',
@@ -1617,8 +1619,13 @@ function system_logging_settings($form, &$form_state) {
       ERROR_REPORTING_DISPLAY_ALL => t('All messages'),
     ),
     '#description' => t('It is recommended that sites running on production environments do not display any errors.'),
+    '#disabled' => isset($settings['error_level']),
   );
 
+  if (isset($settings['error_level'])) {
+    backdrop_set_message(t('Some settings in this form are disabled because they have been overridden. These settings will not affect the site until the override has been removed. Please check the <em>settings.php</em> file for overrides.'), 'warning');
+  }
+
   return system_settings_form($form);
 }
 
@@ -1629,6 +1636,8 @@ function system_logging_settings($form, &$form_state) {
  * @see system_performance_settings_submit().
  */
 function system_performance_settings($form, &$form_state) {
+  global $settings;
+
   backdrop_add_js(backdrop_get_path('module', 'system') . '/js/system.admin.js');
   $config = config('system.core');
 
@@ -1655,6 +1664,7 @@ function system_performance_settings($form, &$form_state) {
     '#title' => t('Cache pages for anonymous users'),
     '#default_value' => $config->get('cache'),
     '#weight' => -2,
+    '#disabled' => isset($settings['cache']),
   );
   $form['caching']['page_cache_background_fetch'] = array(
     '#type' => 'checkbox',
@@ -1715,13 +1725,13 @@ function system_performance_settings($form, &$form_state) {
     '#type' => 'checkbox',
     '#title' => t('Aggregate and compress CSS files.'),
     '#default_value' => $config->get('preprocess_css'),
-    '#disabled' => $disabled,
+    '#disabled' => $disabled || isset($settings['preprocess_css']),
   );
   $form['bandwidth_optimization']['preprocess_js'] = array(
     '#type' => 'checkbox',
     '#title' => t('Aggregate JavaScript files.'),
     '#default_value' => $config->get('preprocess_js'),
-    '#disabled' => $disabled,
+    '#disabled' => $disabled || isset($settings['preprocess_js']),
   );
 
   $form['#submit'][] = 'backdrop_clear_css_cache';
@@ -1730,6 +1740,10 @@ function system_performance_settings($form, &$form_state) {
   // invalidate the page cache, so it needs to be cleared on form submit.
   $form['#submit'][] = 'system_clear_page_cache_submit';
 
+  if (array_diff_key($settings, array('cache', 'preprocess_css', 'preprocess_js'))) {
+    backdrop_set_message(t('Some settings in this form are disabled because they have been overridden. These settings will not affect the site until the override has been removed. Please check the <em>settings.php</em> file for overrides.'), 'warning');
+  }
+
   return system_settings_form($form);
 }
 
diff --git a/core/modules/system/system.install b/core/modules/system/system.install
index d52e11cb47..2cd83da461 100644
--- a/core/modules/system/system.install
+++ b/core/modules/system/system.install
@@ -589,13 +589,13 @@ function system_requirements($phase) {
 
   if ($phase == 'runtime') {
     // Inform the user if theme_debug is enabled.
-    $theme_debug_enabled = config_get('system.core', 'theme_debug');
+    $theme_debug_enabled = settings_get('theme_debug', config_get('system.core', 'theme_debug'));
     if ($theme_debug_enabled) {
       $requirements['theme_debug'] = array(
         'title' => $t('Theme debug'),
         'value' => $t('Enabled'),
         'severity' => REQUIREMENT_WARNING,
-        'description' => $t('Theme debugging is currently enabled, and should be disabled on a live site. This setting can be changed using the <a href="!url">Devel module</a>.', array('!url' => module_exists('devel') ? url('admin/config/development/devel') : 'https://backdropcms.org/project/devel')),
+        'description' => $t('Theme debugging is currently enabled, and should be disabled on a live site. This setting can be changed using the <a href="!url">Devel module</a> or, if set in the settings.php file, by removing it from the settings.php file.', array('!url' => module_exists('devel') ? url('admin/config/development/devel') : 'https://backdropcms.org/project/devel')),
       );
     }
   }
diff --git a/core/modules/system/system.module b/core/modules/system/system.module
index 646e3e4ea6..20a2fd7365 100644
--- a/core/modules/system/system.module
+++ b/core/modules/system/system.module
@@ -4221,7 +4221,7 @@ function system_admin_bar_cache_info() {
  * Check if theme_debug is enabled, and throw a warning if so.
  */
 function system_theme_debug_enabled_warning() {
-  $theme_debug_enabled = config_get('system.core', 'theme_debug');
+  $theme_debug_enabled = settings_get('theme_debug', config_get('system.core', 'theme_debug'));
   if ($theme_debug_enabled) {
     backdrop_set_message(t('Theme debugging is enabled. See the <a href="!url">Status report</a> page for more info.', array('!url' => url('admin/reports/status'))), 'warning', FALSE);
   }

From 49933a32c842ef4f2d91a4e56525e75ab2368ded Mon Sep 17 00:00:00 2001
From: Herb vd Dool <herb@3speedhub.com>
Date: Fri, 1 Nov 2019 10:47:17 -0400
Subject: [PATCH 4/6] punt display to follow-up issue

---
 core/modules/system/system.admin.inc | 18 ++----------------
 1 file changed, 2 insertions(+), 16 deletions(-)

diff --git a/core/modules/system/system.admin.inc b/core/modules/system/system.admin.inc
index 4b6bdc97de..7ad00b177f 100644
--- a/core/modules/system/system.admin.inc
+++ b/core/modules/system/system.admin.inc
@@ -1606,8 +1606,6 @@ function system_run_cron_submit($form, &$form_state) {
  * @see system_logging_settings_submit()
  */
 function system_logging_settings($form, &$form_state) {
-  global $settings;
-
   $form['#config'] = 'system.core';
   $form['error_level'] = array(
     '#type' => 'radios',
@@ -1619,13 +1617,8 @@ function system_logging_settings($form, &$form_state) {
       ERROR_REPORTING_DISPLAY_ALL => t('All messages'),
     ),
     '#description' => t('It is recommended that sites running on production environments do not display any errors.'),
-    '#disabled' => isset($settings['error_level']),
   );
 
-  if (isset($settings['error_level'])) {
-    backdrop_set_message(t('Some settings in this form are disabled because they have been overridden. These settings will not affect the site until the override has been removed. Please check the <em>settings.php</em> file for overrides.'), 'warning');
-  }
-
   return system_settings_form($form);
 }
 
@@ -1636,8 +1629,6 @@ function system_logging_settings($form, &$form_state) {
  * @see system_performance_settings_submit().
  */
 function system_performance_settings($form, &$form_state) {
-  global $settings;
-
   backdrop_add_js(backdrop_get_path('module', 'system') . '/js/system.admin.js');
   $config = config('system.core');
 
@@ -1664,7 +1655,6 @@ function system_performance_settings($form, &$form_state) {
     '#title' => t('Cache pages for anonymous users'),
     '#default_value' => $config->get('cache'),
     '#weight' => -2,
-    '#disabled' => isset($settings['cache']),
   );
   $form['caching']['page_cache_background_fetch'] = array(
     '#type' => 'checkbox',
@@ -1725,13 +1715,13 @@ function system_performance_settings($form, &$form_state) {
     '#type' => 'checkbox',
     '#title' => t('Aggregate and compress CSS files.'),
     '#default_value' => $config->get('preprocess_css'),
-    '#disabled' => $disabled || isset($settings['preprocess_css']),
+    '#disabled' => $disabled,
   );
   $form['bandwidth_optimization']['preprocess_js'] = array(
     '#type' => 'checkbox',
     '#title' => t('Aggregate JavaScript files.'),
     '#default_value' => $config->get('preprocess_js'),
-    '#disabled' => $disabled || isset($settings['preprocess_js']),
+    '#disabled' => $disabled,
   );
 
   $form['#submit'][] = 'backdrop_clear_css_cache';
@@ -1740,10 +1730,6 @@ function system_performance_settings($form, &$form_state) {
   // invalidate the page cache, so it needs to be cleared on form submit.
   $form['#submit'][] = 'system_clear_page_cache_submit';
 
-  if (array_diff_key($settings, array('cache', 'preprocess_css', 'preprocess_js'))) {
-    backdrop_set_message(t('Some settings in this form are disabled because they have been overridden. These settings will not affect the site until the override has been removed. Please check the <em>settings.php</em> file for overrides.'), 'warning');
-  }
-
   return system_settings_form($form);
 }
 

From 1af97970ffb3f7c9ae8503995b0f7a4a6161e71e Mon Sep 17 00:00:00 2001
From: Herb vd Dool <herb@3speedhub.com>
Date: Fri, 1 Nov 2019 23:13:15 -0400
Subject: [PATCH 5/6] slim it down

---
 core/modules/system/system.install | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/modules/system/system.install b/core/modules/system/system.install
index 2cd83da461..3656f8d049 100644
--- a/core/modules/system/system.install
+++ b/core/modules/system/system.install
@@ -595,7 +595,7 @@ function system_requirements($phase) {
         'title' => $t('Theme debug'),
         'value' => $t('Enabled'),
         'severity' => REQUIREMENT_WARNING,
-        'description' => $t('Theme debugging is currently enabled, and should be disabled on a live site. This setting can be changed using the <a href="!url">Devel module</a> or, if set in the settings.php file, by removing it from the settings.php file.', array('!url' => module_exists('devel') ? url('admin/config/development/devel') : 'https://backdropcms.org/project/devel')),
+        'description' => $t('Theme debugging is currently enabled, and should be disabled on a live site. This setting can be changed using the <a href="!url">Devel module</a>.', array('!url' => module_exists('devel') ? url('admin/config/development/devel') : 'https://backdropcms.org/project/devel')),
       );
     }
   }

From 9ed188177c40c6bef15f7ab5e6c6c94269db0151 Mon Sep 17 00:00:00 2001
From: Herb vd Dool <herb@3speedhub.com>
Date: Fri, 1 Nov 2019 23:52:47 -0400
Subject: [PATCH 6/6] add file system paths

---
 core/includes/file.inc                                   | 6 +++---
 core/includes/stream_wrappers.inc                        | 6 +++---
 core/modules/file/file.field.inc                         | 2 +-
 core/modules/file/views/views_handler_field_file_uri.inc | 2 +-
 core/modules/system/system.install                       | 8 ++++----
 core/modules/system/system.module                        | 2 +-
 6 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/core/includes/file.inc b/core/includes/file.inc
index 3540ff00a8..ffa7fc65c4 100644
--- a/core/includes/file.inc
+++ b/core/includes/file.inc
@@ -477,7 +477,7 @@ function file_ensure_htaccess() {
   }
 
   file_save_htaccess('public://', FALSE);
-  if (config_get('system.core', 'file_private_path')) {
+  if (settings_get('file_private_path', config_get('system.core', 'file_private_path'))) {
     file_save_htaccess('private://', TRUE);
   }
   file_save_htaccess('temporary://', TRUE);
@@ -2637,7 +2637,7 @@ function backdrop_tempnam($directory, $prefix) {
  * Gets the path of system-appropriate temporary directory.
  */
 function file_directory_temp() {
-  $temporary_directory = config_get('system.core', 'file_temporary_path');
+  $temporary_directory = settings_get('file_temporary_path', config_get('system.core', 'file_temporary_path'));
 
   if (empty($temporary_directory)) {
     $directories = array();
@@ -2667,7 +2667,7 @@ function file_directory_temp() {
 
     if (empty($temporary_directory)) {
       // If no directory has been found default to 'files/tmp'.
-      $temporary_directory = config_get('system.core', 'file_public_path') . '/tmp';
+      $temporary_directory = settings_get('file_public_path', config_get('system.core', 'file_public_path')) . '/tmp';
 
       // Windows accepts paths with either slash (/) or backslash (\), but will
       // not accept a path which contains both a slash and a backslash. Since
diff --git a/core/includes/stream_wrappers.inc b/core/includes/stream_wrappers.inc
index 5716c4b1de..71ae5e57aa 100644
--- a/core/includes/stream_wrappers.inc
+++ b/core/includes/stream_wrappers.inc
@@ -915,7 +915,7 @@ class BackdropPublicStreamWrapper extends BackdropLocalStreamWrapper {
    * Implements abstract public function getDirectoryPath()
    */
   public function getDirectoryPath() {
-    return config_get('system.core', 'file_public_path');
+    return settings_get('file_public_path', config_get('system.core', 'file_public_path'));
   }
 
   /**
@@ -940,7 +940,7 @@ class BackdropPrivateStreamWrapper extends BackdropLocalStreamWrapper {
    * Implements abstract public function getDirectoryPath()
    */
   public function getDirectoryPath() {
-    return config_get('system.core', 'file_private_path');
+    return settings_get('file_private_path', config_get('system.core', 'file_private_path'));
   }
 
   /**
@@ -967,7 +967,7 @@ class BackdropTemporaryStreamWrapper extends BackdropLocalStreamWrapper {
    * Implements abstract public function getDirectoryPath()
    */
   public function getDirectoryPath() {
-    $temp = config_get('system.core', 'file_temporary_path');
+    $temp = settings_get('file_temporary_path', config_get('system.core', 'file_temporary_path'));
     if (empty($temp)) {
       $temp = file_directory_temp();
     }
diff --git a/core/modules/file/file.field.inc b/core/modules/file/file.field.inc
index a74ba1a8b4..7b5473416c 100644
--- a/core/modules/file/file.field.inc
+++ b/core/modules/file/file.field.inc
@@ -83,7 +83,7 @@ function file_field_instance_settings_form($field, $instance) {
     '#type' => 'textfield',
     '#title' => t('File directory'),
     '#default_value' => $settings['file_directory'],
-    '#field_prefix' => $field['settings']['uri_scheme'] == 'public' ? config_get('system.core', 'file_public_path') . '/' : '',
+    '#field_prefix' => $field['settings']['uri_scheme'] == 'public' ? settings_get('file_public_path', config_get('system.core', 'file_public_path')) . '/' : '',
     '#description' => t('Optional subdirectory within the upload destination where files will be stored. Do not include preceding or trailing slashes.'),
     '#element_validate' => array('_file_generic_settings_file_directory_validate'),
     '#weight' => 3,
diff --git a/core/modules/file/views/views_handler_field_file_uri.inc b/core/modules/file/views/views_handler_field_file_uri.inc
index 77b831c3f8..198a2fc906 100644
--- a/core/modules/file/views/views_handler_field_file_uri.inc
+++ b/core/modules/file/views/views_handler_field_file_uri.inc
@@ -45,7 +45,7 @@ class views_handler_field_file_uri extends views_handler_field_file {
       if (!empty($this->options['image_style'])) {
         // $data contains url of image.
         // Get public file system path and its length.
-        $file_public_path = '/' . config_get('system.core', 'file_public_path');
+        $file_public_path = '/' . settings_get('file_public_path', config_get('system.core', 'file_public_path'));
         $file_public_path_strlen = strlen($file_public_path);
         // Find insertion position of public file system path.
         $insert_at = strpos($data, $file_public_path);
diff --git a/core/modules/system/system.install b/core/modules/system/system.install
index 3656f8d049..768615446c 100644
--- a/core/modules/system/system.install
+++ b/core/modules/system/system.install
@@ -237,9 +237,9 @@ function system_requirements($phase) {
     file_ensure_htaccess();
     $htaccess_files['public://.htaccess'] = array(
       'title' => $t('Public files directory'),
-      'directory' => config_get('system.core', 'file_public_path'),
+      'directory' => settings_get('file_public_path', config_get('system.core', 'file_public_path')),
     );
-    if ($private_files_directory = config_get('system.core', 'file_private_path')) {
+    if ($private_files_directory = settings_get('file_private_path', config_get('system.core', 'file_private_path'))) {
       $htaccess_files['private://.htaccess'] = array(
         'title' => $t('Private files directory'),
         'directory' => $private_files_directory,
@@ -311,8 +311,8 @@ function system_requirements($phase) {
   // Test files directories.
   $directories = array();
   if ($phase == 'runtime') {
-    $directories[] = config_get('system.core', 'file_public_path');
-    $directories[] = config_get('system.core', 'file_private_path');
+    $directories[] = settings_get('file_public_path', config_get('system.core', 'file_public_path'));
+    $directories[] = settings_get('file_private_path', config_get('system.core', 'file_private_path'));
     $directories[] = file_directory_temp();
   }
   else {
diff --git a/core/modules/system/system.module b/core/modules/system/system.module
index 20a2fd7365..aa1f7b7cf1 100644
--- a/core/modules/system/system.module
+++ b/core/modules/system/system.module
@@ -2001,7 +2001,7 @@ function system_stream_wrappers() {
   );
 
   // Only register the private file stream wrapper if a file path has been set.
-  if (config_get('system.core', 'file_private_path')) {
+  if (settings_get('file_private_path', config_get('system.core', 'file_private_path'))) {
     $wrappers['private'] = array(
       'name' => t('Private files'),
       'class' => 'BackdropPrivateStreamWrapper',
